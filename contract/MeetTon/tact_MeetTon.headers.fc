;;
;; Header files for MeetTon
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_slice_cell
(cell, ()) __tact_dict_set_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_dict_get_slice_cell
cell __tact_dict_get_slice_cell(cell d, int kl, slice k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Withdraw$_load
(slice, ((int))) $Withdraw$_load(slice sc_0) inline;

;; $Income$_load
(slice, ((slice))) $Income$_load(slice sc_0) inline;

;; $Payment$_store
builder $Payment$_store(builder build_0, (slice, int) v) inline;

;; $Payment$_store_cell
cell $Payment$_store_cell((slice, int) v) inline;

;; $Payment$_load
(slice, ((slice, int))) $Payment$_load(slice sc_0) inline;

;; $Payment$_as_optional
tuple $Payment$_as_optional((slice, int) v) inline;

;; $Payment$_load_opt
tuple $Payment$_load_opt(cell cl) inline;

;; $MeetTon$_store
builder $MeetTon$_store(builder build_0, (slice, cell) v) inline;

;; $MeetTon$_load
(slice, ((slice, cell))) $MeetTon$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Payment$_not_null
((slice, int)) $Payment$_not_null(tuple v) inline;

;; $Payment$_to_tuple
tuple $Payment$_to_tuple(((slice, int)) v) inline;

;; $Payment$_to_opt_tuple
tuple $Payment$_to_opt_tuple(tuple v) inline;

;; $Payment$_to_opt_external
tuple $Payment$_to_opt_external(tuple v) inline;

;; $MeetTon$_contract_init
(slice, cell) $MeetTon$_contract_init() impure inline_ref;

;; $MeetTon$_contract_load
(slice, cell) $MeetTon$_contract_load() impure inline_ref;

;; $MeetTon$_contract_store
() $MeetTon$_contract_store((slice, cell) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $MeetTon$_fun_onlyOwner
((slice, cell), ()) $MeetTon$_fun_onlyOwner((slice, cell) $self) impure inline_ref;

;; $MeetTon$_fun_balance
((slice, cell), int) $MeetTon$_fun_balance((slice, cell) $self) impure inline_ref;

;; $MeetTon$_fun_myAddress
((slice, cell), slice) $MeetTon$_fun_myAddress((slice, cell) $self) impure inline_ref;

;; $MeetTon$_fun_payment
((slice, cell), tuple) $MeetTon$_fun_payment((slice, cell) $self, slice $key) impure inline_ref;

;; $MeetTon$_fun_payments
((slice, cell), cell) $MeetTon$_fun_payments((slice, cell) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $MeetTon$_fun_forward
((slice, cell), ()) $MeetTon$_fun_forward((slice, cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $MeetTon$_fun_notify
((slice, cell), ()) $MeetTon$_fun_notify((slice, cell) $self, cell $body) impure inline;

;; $Payment$_constructor_goal_value
((slice, int)) $Payment$_constructor_goal_value(slice goal, int value) inline;

;; $SendParameters$_constructor_to_bounce_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice to, int bounce, int value, int mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
